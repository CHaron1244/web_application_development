{"ast":null,"code":"import axios from 'axios';\nimport dayjs from 'dayjs';\nexport default {\n  name: 'Customer',\n  data() {\n    return {\n      dialogVisible: false,\n      index: 0,\n      row: {},\n      addToCartDialogVisible: false,\n      // 弹出框默认不出现\n      addToCartForm: {\n        quantity: 1 // 默认数量为1\n      },\n\n      dialogFormVisible: false,\n      form: {},\n      tableData: [],\n      // 所有商品信息\n      search: '',\n      user: {},\n      currentTime: ''\n    };\n  },\n  created() {\n    let str = sessionStorage.getItem(\"user\"); // str is a JSON object\n    this.user = JSON.parse(str); // user is a js object (this.user.userAccount)访问\n    this.load(); // 加载所有商品信息\n  },\n\n  methods: {\n    showAddToCartDialog(index, row) {\n      this.addToCartDialogVisible = true;\n      this.index = index;\n      this.row = row;\n    },\n    load() {\n      axios.get(\"/good/selectAllGoods\").then(res => {\n        this.tableData = res.data.data;\n      });\n    },\n    AddToCart() {\n      // 自己想的方法：用data里面的index row来存点击按钮返回过来的index row\n      const role = this.user.userRole;\n      if (role == '0') {\n        // 规定只有customer才能购物，管理员只能管理商品\n        // let str = sessionStorage.getItem('user') // str is a JSON object\n        const userAccount = this.user.userAccount;\n        const goodName = this.row.goodName;\n        const goodPrice = this.row.goodPrice;\n        const goodNumber = this.addToCartForm.quantity;\n        const form = {\n          userAccount,\n          goodName,\n          goodPrice,\n          goodNumber\n        };\n        axios.post('/cart/addItem', form).then(res => {\n          const ans = res.data;\n          if (ans.code == '0') {\n            this.$message({\n              message: `Successfully add your commodity to your cart!`,\n              type: 'success'\n            });\n          } else {\n            this.$message({\n              type: \"error\",\n              message: 'Sorry,fail to add this item failed!!'\n            });\n          }\n        }).catch(error => {\n          this.$message({\n            type: \"error\",\n            message: 'Sorry,fail to add this item!!'\n          });\n        });\n        this.load(); // 数据更新就要加载\n        this.addToCartForm.quantity = 1; // 重置为1每次\n        this.addToCartDialogVisible = false;\n      }\n    },\n    handleDelete(index, row) {\n      // console.log(index, row); index是这一行数据索引(from 0)，row是这一行数据，可以直接获取元素\n      const goodName = row.goodName;\n      axios.post(`/good/deleteGoodByName/${goodName}`).then(res => {\n        if (res.data.code == '0') {\n          this.$message({\n            message: `Successfully delete ${goodName}`,\n            type: 'success'\n          });\n        } else {\n          this.$message({\n            message: 'Something wrong happened!',\n            type: 'error'\n          });\n        }\n      });\n    },\n    generateBrowseLog(index, row) {\n      const account = this.user.userAccount;\n      const goodName = row.goodName;\n      this.currentTime = dayjs().format(\"YYYY-MM-DD HH:mm:ss\");\n      const form = {\n        userAccount: account,\n        goodName: goodName,\n        browseTime: this.currentTime\n      };\n      axios.post('/browseLog/addBrowseLog', form).then(res => {\n        if (res.data.code == '0') {\n          this.$message({\n            type: 'success',\n            message: 'Successfully add this browse log!'\n          });\n        } else {\n          this.$message({\n            type: 'error',\n            message: 'Fail to add this browse log!'\n          });\n        }\n      }).catch(error => {\n        this.$message({\n          type: 'error',\n          message: 'Oops! Something wrong happened!'\n        });\n      });\n      setTimeout(() => {\n        this.dialogVisible = true; // 提醒用户会产生browse log\n      }, 1000);\n    }\n  },\n  watch: {\n    tableData() {\n      deep: true, this.load();\n    }\n  },\n  computed: {\n    readTableData() {\n      return this.tableData.filter(item => {\n        if (this.search === '') return item.goodName.toLowerCase().includes('');else return item.goodName.toLowerCase().includes(this.search.toLowerCase());\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","dayjs","name","data","dialogVisible","index","row","addToCartDialogVisible","addToCartForm","quantity","dialogFormVisible","form","tableData","search","user","currentTime","created","str","sessionStorage","getItem","JSON","parse","load","methods","showAddToCartDialog","get","then","res","AddToCart","role","userRole","userAccount","goodName","goodPrice","goodNumber","post","ans","code","$message","message","type","catch","error","handleDelete","generateBrowseLog","account","format","browseTime","setTimeout","watch","deep","computed","readTableData","filter","item","toLowerCase","includes"],"sources":["src/views/Customer.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div style=\"margin:10px 0\">\r\n      <el-input v-model=\"search\" placeholder=\"Please enter the keyword to find what you like!\"\r\n        style=\"width: 50%;border-bottom-color: black\" clearable></el-input>\r\n      <el-button type=\"primary\" style=\"margin-left:  5px ;\r\n        background-color: black; color: white;border-color: white;\" @click=\"load\">search</el-button>\r\n    </div>\r\n    <!-- 在el-table上加上height属性就可以固定表头，先用着再看要不要不需要这个功能 -->\r\n    <el-table :data=\"readTableData\" style=\"width: 100%;font-size: 15px;font-weight: bold\" border height=\"1000\">\r\n      <el-table-column prop=\"goodName\" label=\"GOOD NAME\" align=\"center\"></el-table-column>\r\n      <el-table-column prop=\"goodPrice\" label=\"GOOD PRICE\" align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          $&nbsp;{{ scope.row.goodPrice }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"\" label=\"GOOD PICTURE\" align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          <!-- <img src=\"../../public/imgs/Americano.png\" alt=\"hello\" width=\"100%\"></img> TODO,图片路径未处理好 -->\r\n          <img :src=\"../../public/imgs/>\"+${scope}+\".png\" alt=\"hello\" width=\"100%\"></img>\r\n          <!-- ../../public/imgs/Americano.png -->\r\n          <!-- scope.row.goodImg -->\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"goodSale\" label=\"GOOD SALE\" align=\"center\"></el-table-column>\r\n      <el-table-column prop=\"goodInfo\" label=\"GOOD INFORMATION\" align=\"center\"></el-table-column>\r\n      </el-table-column>\r\n      <el-table-column prop=\"goodType\" label=\"GOOD TYPE\" align=\"center\"></el-table-column>\r\n      <el-table-column label=\"OPERATION\" align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button size=\"mini\" type=\"primary\" @click=\"showAddToCartDialog(scope.$index, scope.row)\">Add to\r\n            Cart</el-button>\r\n          <el-dialog title=\"Now Add this refreshment to your cart!\" :visible=\"addToCartDialogVisible\"\r\n            @close=\"addToCartDialogVisible = false\">\r\n            <el-form :model=\"addToCartForm\" ref=\"addToCartForm\" label-width=\"80px\">\r\n              <el-form-item label=\"Quantity\">\r\n                <el-input v-model=\"addToCartForm.quantity\" type=\"number\" autocomplete=\"off\"></el-input>\r\n              </el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n              <el-button @click=\"addToCartDialogVisible = false\">Cancel</el-button>\r\n              <el-button type=\"primary\" @click=\"AddToCart\">Confirm</el-button>\r\n            </div>\r\n          </el-dialog>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"FURTHER\" align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button size=\"mini\" type=\"info\" @click=\"generateBrowseLog(scope.$index, scope.row)\">WANT TO KNOW\r\n            MORE?</el-button>\r\n          <el-dialog title=\"NOTICE\" :visible.sync=\"dialogVisible\" width=\"40%\">\r\n            <span>We will notify you if there's more information, and this will produce a browse log. Good luck!</span>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n              <!-- <el-button @click=\"dialogVisible = false\">Cancel</el-button> -->\r\n              <el-button type=\"primary\" @click=\"dialogVisible = false\">Confirm</el-button>\r\n            </span>\r\n          </el-dialog>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import axios from 'axios'\r\n  import dayjs from 'dayjs'\r\n  export default {\r\n    name: 'Customer',\r\n    data() {\r\n      return {\r\n        dialogVisible: false,\r\n        index: 0,\r\n        row: {},\r\n        addToCartDialogVisible: false, // 弹出框默认不出现\r\n        addToCartForm: {\r\n          quantity: 1, // 默认数量为1\r\n        },\r\n        dialogFormVisible: false,\r\n        form: {},\r\n        tableData: [], // 所有商品信息\r\n        search: '',\r\n        user: {},\r\n        currentTime: ''\r\n      };\r\n    },\r\n    created() {\r\n      let str = sessionStorage.getItem(\"user\"); // str is a JSON object\r\n      this.user = JSON.parse(str); // user is a js object (this.user.userAccount)访问\r\n      this.load(); // 加载所有商品信息\r\n    },\r\n    methods: {\r\n      showAddToCartDialog(index, row) {\r\n        this.addToCartDialogVisible = true\r\n        this.index = index\r\n        this.row = row\r\n      },\r\n      load() {\r\n        axios.get(\"/good/selectAllGoods\").then((res) => {\r\n          this.tableData = res.data.data;\r\n        })\r\n      },\r\n      AddToCart() { // 自己想的方法：用data里面的index row来存点击按钮返回过来的index row\r\n        const role = this.user.userRole\r\n        if (role == '0') { // 规定只有customer才能购物，管理员只能管理商品\r\n          // let str = sessionStorage.getItem('user') // str is a JSON object\r\n          const userAccount = this.user.userAccount\r\n          const goodName = this.row.goodName\r\n          const goodPrice = this.row.goodPrice\r\n          const goodNumber = this.addToCartForm.quantity\r\n          const form = {\r\n            userAccount,\r\n            goodName,\r\n            goodPrice,\r\n            goodNumber\r\n          }\r\n          axios.post('/cart/addItem', form).then(res => {\r\n            const ans = res.data\r\n            if (ans.code == '0') {\r\n              this.$message({\r\n                message: `Successfully add your commodity to your cart!`,\r\n                type: 'success'\r\n              })\r\n            } else {\r\n              this.$message({\r\n                type: \"error\",\r\n                message: 'Sorry,fail to add this item failed!!'\r\n              })\r\n            }\r\n          }).catch(error => {\r\n            this.$message({\r\n              type: \"error\",\r\n              message: 'Sorry,fail to add this item!!'\r\n            })\r\n          })\r\n          this.load() // 数据更新就要加载\r\n          this.addToCartForm.quantity = 1 // 重置为1每次\r\n          this.addToCartDialogVisible = false\r\n        }\r\n      },\r\n      handleDelete(index, row) {// console.log(index, row); index是这一行数据索引(from 0)，row是这一行数据，可以直接获取元素\r\n        const goodName = row.goodName\r\n        axios.post(`/good/deleteGoodByName/${goodName}`).then(res => {\r\n          if (res.data.code == '0') {\r\n            this.$message({\r\n              message: `Successfully delete ${goodName}`,\r\n              type: 'success'\r\n            })\r\n          } else {\r\n            this.$message({\r\n              message: 'Something wrong happened!',\r\n              type: 'error'\r\n            })\r\n          }\r\n        })\r\n      },\r\n      generateBrowseLog(index, row) {\r\n        const account = this.user.userAccount\r\n        const goodName = row.goodName\r\n        this.currentTime = dayjs().format(\"YYYY-MM-DD HH:mm:ss\")\r\n        const form = {\r\n          userAccount: account,\r\n          goodName: goodName,\r\n          browseTime: this.currentTime\r\n        }\r\n        axios.post('/browseLog/addBrowseLog', form).then(res => {\r\n          if (res.data.code == '0') {\r\n            this.$message({\r\n              type: 'success',\r\n              message: 'Successfully add this browse log!'\r\n            })\r\n          } else {\r\n            this.$message({\r\n              type: 'error',\r\n              message: 'Fail to add this browse log!'\r\n            })\r\n          }\r\n        }).catch(error => {\r\n          this.$message({\r\n            type: 'error',\r\n            message: 'Oops! Something wrong happened!'\r\n          })\r\n        })\r\n        setTimeout(() => {\r\n          this.dialogVisible = true // 提醒用户会产生browse log\r\n        }, 1000)\r\n      }\r\n    },\r\n    watch: {\r\n      tableData() {\r\n        deep: true,\r\n          this.load()\r\n      }\r\n    },\r\n    computed: {\r\n      readTableData() {\r\n        return this.tableData.filter(item => {\r\n          if (this.search === '')\r\n            return item.goodName.toLowerCase().includes('');\r\n          else\r\n            return item.goodName.toLowerCase().includes(this.search.toLowerCase());\r\n        });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\n  .el-row {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .el-col {\r\n    border-radius: 4px;\r\n  }\r\n\r\n  .bottom {\r\n    margin-top: 13px;\r\n    line-height: 12px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n\r\n  .button {\r\n    padding: 0;\r\n    min-height: auto;\r\n  }\r\n\r\n  .image {\r\n    width: 100%;\r\n    display: block;\r\n  }\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}