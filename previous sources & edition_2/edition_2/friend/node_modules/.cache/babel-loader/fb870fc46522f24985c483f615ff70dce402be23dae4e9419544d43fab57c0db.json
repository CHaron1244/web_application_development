{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: \"Login\",\n  // 定义组件名称\n  data() {\n    return {\n      ruleForm: {\n        userAccount: '',\n        userPassword: ''\n      },\n      // 表单数据对象\n      rules: {\n        // 表单验证规则\n        userAccount: [{\n          required: true,\n          message: 'Please enter your user account,this cannot be an empty term',\n          trigger: 'blur'\n        }],\n        userPassword: [{\n          required: true,\n          message: 'Please enter password,this cannot be an empty term',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    register() {\n      // 注册方法，跳转到注册页面\n      this.$router.push(\"/register\");\n    },\n    login() {\n      // 登录方法\n      axios.get(`/user/selectByAccount/${this.ruleForm.userAccount}`).then(res => {\n        const data = res.data.data;\n        this.ruleForm.userEmail = data.userEmail;\n        this.ruleForm.userRole = data.userRole;\n      }).catch(error => {\n        this.$message({\n          type: \"error\",\n          message: 'Illegal User!No such user account!'\n        });\n      });\n      let str = sessionStorage.getItem(\"user\") || \"{}\";\n      this.$refs[\"ruleForm\"].validate(valid => {\n        // 对表单进行验证\n        if (valid) {\n          // 如果验证通过\n          axios.post(\"/user/login\", this.ruleForm).then(res => {\n            // 向服务器发送登录请求 返回的是Result,里面data是null res.data才是Result\n            if (res.data.code == '0') {\n              // 如果登录成功\n              this.$message({\n                type: \"success\",\n                message: `login in successfully!Welcome to Gunther's Central Perk,${res.data.data.userAccount}!`\n              });\n              sessionStorage.setItem(\"user\", JSON.stringify(this.ruleForm)); // 缓存用户信息\n              if (this.ruleForm.userRole == 0) {\n                this.$router.push(\"/customer\"); //跳转到用户\n              } else if (this.ruleForm.userRole == 1) {\n                this.$router.push(\"/good\"); //跳转到商品管理\n              }\n            } else {\n              this.$message({\n                type: \"error\",\n                message: 'Wrong account or wrong password, fail to login to!'\n              });\n            }\n          });\n        } else {\n          // 如果验证不通过\n          this.$message({\n            type: \"error\",\n            message: 'Sorry, validation failed!!'\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","ruleForm","userAccount","userPassword","rules","required","message","trigger","methods","register","$router","push","login","get","then","res","userEmail","userRole","catch","error","$message","type","str","sessionStorage","getItem","$refs","validate","valid","post","code","setItem","JSON","stringify"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\r\n  <!-- 定义登录页面的样式 -->\r\n  <div style=\"width: 100%;height: 100vh;background-color: silver; overflow: hidden\" id=\"building\">\r\n    <!-- 设置登录框的宽度和居中 -->\r\n    <div style=\"width: 600px;margin:80px auto\">\r\n      <img src=\"imgs\\CentralPerk.png\" alt=\"CENTRAL PERK\">\r\n      <!-- 显示标题 -->\r\n      <div style=\"text-align: center; font-weight: bold;color: red; font-size: 40px;padding-bottom: 10px;\">WELCOME TO\r\n      </div>\r\n      <div style=\"text-align: center; font-weight: bold;color: blue; font-size: 40px;padding-bottom: 40px;\">GUNTHER'S\r\n        CENTRAL PERK</div>\r\n      <!-- 定义表单 -->\r\n      <el-form ref=\"ruleForm\" :model=\"ruleForm\" :rules=\"rules\" size=\"normal\" label-width=\"120\" class=\"demo-ruleForm\">\r\n        <!-- 输入用户名的表单项 -->\r\n        <el-form-item prop=\"userAccount\" label=\"Please enter your account\">\r\n          <el-input prefix-icon=\"el-icon-user-solid\" v-model=\"ruleForm.userAccount\"\r\n            :style=\"{color: 'white', borderColor: 'white'}\" type=\"text\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <!-- 输入密码的表单项 -->\r\n        <el-form-item prop=\"userPassword\" label=\"Please enter your password\">\r\n          <el-input prefix-icon=\"el-icon-lock\" v-model=\"ruleForm.userPassword\"\r\n            :style=\"{color: 'white', borderColor: 'white'}\" type=\"password\" autocomplete=\"off\">\r\n          </el-input>\r\n        </el-form-item>\r\n        <!-- 登录按钮 -->\r\n        <el-form-item>\r\n          <el-button style=\"width: 100%;text-align: center;background-color: red;color: white;border-color: white\"\r\n            type=\"primary\" @click=\"login\">log in</el-button>\r\n        </el-form-item>\r\n        <!-- 注册按钮 -->\r\n        <el-form-item>\r\n          <el-button style=\"width: 100%;text-align: center;background-color: black;color: white;border-color: white\"\r\n            type=\"primary\" @click=\"register\">register</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import axios from 'axios'\r\n  export default {\r\n    name: \"Login\", // 定义组件名称\r\n    data() {\r\n      return {\r\n        ruleForm: {\r\n          userAccount: '',\r\n          userPassword: ''\r\n        }, // 表单数据对象\r\n        rules: { // 表单验证规则\r\n          userAccount: [\r\n            {\r\n              required: true,\r\n              message: 'Please enter your user account,this cannot be an empty term',\r\n              trigger: 'blur',\r\n            },\r\n          ],\r\n          userPassword: [\r\n            {\r\n              required: true,\r\n              message: 'Please enter password,this cannot be an empty term',\r\n              trigger: 'blur',\r\n            },\r\n          ]\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      register() { // 注册方法，跳转到注册页面\r\n        this.$router.push(\"/register\")\r\n      },\r\n      login() { // 登录方法\r\n        axios.get(`/user/selectByAccount/${this.ruleForm.userAccount}`).then(res => {\r\n          const data = res.data.data\r\n          this.ruleForm.userEmail = data.userEmail\r\n          this.ruleForm.userRole = data.userRole\r\n        }).catch(error => {\r\n          this.$message({\r\n            type: \"error\",\r\n            message: 'Illegal User!No such user account!'\r\n          })\r\n        })\r\n        let str = sessionStorage.getItem(\"user\") || \"{}\"\r\n        this.$refs[\"ruleForm\"].validate((valid) => { // 对表单进行验证\r\n          if (valid) { // 如果验证通过\r\n            axios.post(\"/user/login\", this.ruleForm).then(res => { // 向服务器发送登录请求 返回的是Result,里面data是null res.data才是Result\r\n              if (res.data.code == '0') { // 如果登录成功\r\n                this.$message({\r\n                  type: \"success\",\r\n                  message: `login in successfully!Welcome to Gunther's Central Perk,${res.data.data.userAccount}!`\r\n                })\r\n                sessionStorage.setItem(\"user\", JSON.stringify(this.ruleForm))  // 缓存用户信息\r\n                if (this.ruleForm.userRole == 0) {\r\n                  this.$router.push(\"/customer\")//跳转到用户\r\n                } else if (this.ruleForm.userRole == 1) {\r\n                  this.$router.push(\"/good\")//跳转到商品管理\r\n                }\r\n              } else {\r\n                this.$message({\r\n                  type: \"error\",\r\n                  message: 'Wrong account or wrong password, fail to login to!'\r\n                })\r\n              }\r\n            })\r\n          } else { // 如果验证不通过\r\n            this.$message({\r\n              type: \"error\",\r\n              message: 'Sorry, validation failed!!'\r\n            })\r\n          }\r\n        })\r\n      }\r\n    },\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .el-message--success,\r\n  .el-message--error {\r\n    font-size: 30px\r\n  }\r\n\r\n  #building {\r\n    background: url(\"../assets/imgs/friend.png\") center center no-repeat;\r\n    width: 50%;\r\n    min-height: 100%;\r\n    position: fixed;\r\n    /* display: flex; */\r\n    background-size: 60% 1%;\r\n  }\r\n</style>\r\n"],"mappings":";AAwCA,OAAAA,KAAA;AACA;EACAC,IAAA;EAAA;EACAC,KAAA;IACA;MACAC,QAAA;QACAC,WAAA;QACAC,YAAA;MACA;MAAA;MACAC,KAAA;QAAA;QACAF,WAAA,GACA;UACAG,QAAA;UACAC,OAAA;UACAC,OAAA;QACA,EACA;QACAJ,YAAA,GACA;UACAE,QAAA;UACAC,OAAA;UACAC,OAAA;QACA;MAEA;IACA;EACA;EACAC,OAAA;IACAC,SAAA;MAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;IACAC,MAAA;MAAA;MACAd,KAAA,CAAAe,GAAA,+BAAAZ,QAAA,CAAAC,WAAA,IAAAY,IAAA,CAAAC,GAAA;QACA,MAAAf,IAAA,GAAAe,GAAA,CAAAf,IAAA,CAAAA,IAAA;QACA,KAAAC,QAAA,CAAAe,SAAA,GAAAhB,IAAA,CAAAgB,SAAA;QACA,KAAAf,QAAA,CAAAgB,QAAA,GAAAjB,IAAA,CAAAiB,QAAA;MACA,GAAAC,KAAA,CAAAC,KAAA;QACA,KAAAC,QAAA;UACAC,IAAA;UACAf,OAAA;QACA;MACA;MACA,IAAAgB,GAAA,GAAAC,cAAA,CAAAC,OAAA;MACA,KAAAC,KAAA,aAAAC,QAAA,CAAAC,KAAA;QAAA;QACA,IAAAA,KAAA;UAAA;UACA7B,KAAA,CAAA8B,IAAA,qBAAA3B,QAAA,EAAAa,IAAA,CAAAC,GAAA;YAAA;YACA,IAAAA,GAAA,CAAAf,IAAA,CAAA6B,IAAA;cAAA;cACA,KAAAT,QAAA;gBACAC,IAAA;gBACAf,OAAA,6DAAAS,GAAA,CAAAf,IAAA,CAAAA,IAAA,CAAAE,WAAA;cACA;cACAqB,cAAA,CAAAO,OAAA,SAAAC,IAAA,CAAAC,SAAA,MAAA/B,QAAA;cACA,SAAAA,QAAA,CAAAgB,QAAA;gBACA,KAAAP,OAAA,CAAAC,IAAA;cACA,gBAAAV,QAAA,CAAAgB,QAAA;gBACA,KAAAP,OAAA,CAAAC,IAAA;cACA;YACA;cACA,KAAAS,QAAA;gBACAC,IAAA;gBACAf,OAAA;cACA;YACA;UACA;QACA;UAAA;UACA,KAAAc,QAAA;YACAC,IAAA;YACAf,OAAA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}