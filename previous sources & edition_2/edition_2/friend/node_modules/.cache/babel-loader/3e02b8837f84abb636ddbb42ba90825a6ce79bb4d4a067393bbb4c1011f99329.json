{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Message, MessageBox } from 'element-ui';\nimport axios from 'axios';\nexport default {\n  name: \"Register\",\n  data() {\n    return {\n      ruleForm: {\n        userAccount: '',\n        userPassword: '',\n        userEmail: '',\n        userRole: ''\n      },\n      rules: {\n        userAccount: [{\n          required: true,\n          message: 'Please enter your user account,this cannot be an empty term ',\n          trigger: 'blur'\n        }],\n        userPassword: [{\n          required: true,\n          message: 'Please enter password,this cannot be an empty term',\n          trigger: 'blur'\n        }],\n        userEmail: [{\n          required: true,\n          message: 'Please enter email address,this cannot be an empty term',\n          trigger: 'blur'\n        }, {\n          type: 'email',\n          message: 'Please enter the correct email address,this cannot be an empty term',\n          trigger: ['blur', 'change']\n        }],\n        userRole: [{\n          type: 'number',\n          required: true,\n          message: 'Please select your role,this cannot be an empty term',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    register() {\n      this.$refs[\"ruleForm\"].validate(valid => {\n        if (valid) {\n          axios.post(\"/user/register\", this.ruleForm).then(res => {\n            if (res.data.code === '0') {\n              this.$message({\n                message: 'Congratulations, you have registered successfully. Now click the button below to log in, and enjoy your afternoon tea!',\n                type: 'success'\n              });\n            } else {\n              this.$message.error(res.data.msg);\n            }\n          }).catch(error => {\n            this.$message.error(res.data.msg);\n          });\n        } else {\n          this.$message.error('Error submit! Please check your input information!');\n        }\n      });\n    },\n    backToLogin() {\n      this.$router.push(\"/login\"); // Redirect to login\n    }\n  }\n};","map":{"version":3,"names":["Message","MessageBox","axios","name","data","ruleForm","userAccount","userPassword","userEmail","userRole","rules","required","message","trigger","type","methods","register","$refs","validate","valid","post","then","res","code","$message","error","msg","catch","backToLogin","$router","push"],"sources":["src/views/Register.vue"],"sourcesContent":["<template>\r\n  <div style=\"width: 100%;height: 100vh;background-color: powderblue; overflow: hidden\" id=\"building\">\r\n    <div style=\"width: 600px;margin:40px auto\">\r\n      <img src=\"imgs\\CentralPerk.png\" alt=\"CENTRAL PERK\">\r\n      <div style=\"color: red ;font-size: 30px;text-align: center;padding: 30px 0\">\r\n        Welcome to GUNTHER'S CENTRAL PERK Registration Center\r\n      </div>\r\n      <el-form ref=\"ruleForm\" :model=\"ruleForm\" :rules=\"rules\" label-width=\"120\" class=\"demo-ruleForm\">\r\n        <el-form-item prop=\"userAccount\" label=\"Input your user account\">\r\n          <el-input v-model=\"ruleForm.userAccount\" type=\"text\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"userPassword\" label=\"Enter your password\">\r\n          <el-input v-model=\"ruleForm.userPassword\" type=\"password\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"userEmail\" label=\"Enter your email\">\r\n          <el-input v-model=\"ruleForm.userEmail\" type=\"email\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"userRole\" label=\"Choose your role\">\r\n          <el-radio v-model=\"ruleForm.userRole\" :label=\"0\">Customer</el-radio>\r\n          <el-radio v-model=\"ruleForm.userRole\" :label=\"1\">Administrator</el-radio>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button style=\"width: 100%\" type=\"primary\" @click=\"register\">Register my account</el-button>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button style=\"width: 100%\" type=\"danger\" @click=\"backToLogin\">back to login</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import { Message, MessageBox } from 'element-ui';\r\n  import axios from 'axios'\r\n  export default {\r\n    name: \"Register\",\r\n    data() {\r\n      return {\r\n        ruleForm: {\r\n          userAccount: '',\r\n          userPassword: '',\r\n          userEmail: '',\r\n          userRole: ''\r\n        },\r\n        rules: {\r\n          userAccount: [\r\n            { required: true, message: 'Please enter your user account,this cannot be an empty term ', trigger: 'blur' }\r\n          ],\r\n          userPassword: [\r\n            { required: true, message: 'Please enter password,this cannot be an empty term', trigger: 'blur' }\r\n          ],\r\n          userEmail: [\r\n            { required: true, message: 'Please enter email address,this cannot be an empty term', trigger: 'blur' },\r\n            { type: 'email', message: 'Please enter the correct email address,this cannot be an empty term', trigger: ['blur', 'change'] }\r\n          ],\r\n          userRole: [\r\n            { type: 'number', required: true, message: 'Please select your role,this cannot be an empty term', trigger: 'blur' }\r\n          ]\r\n        }\r\n      };\r\n    },\r\n    methods: {\r\n      register() {\r\n        this.$refs[\"ruleForm\"].validate((valid) => {\r\n          if (valid) {\r\n            axios.post(\"/user/register\", this.ruleForm).then(res => {\r\n              if (res.data.code === '0') {\r\n                this.$message({\r\n                  message: 'Congratulations, you have registered successfully. Now click the button below to log in, and enjoy your afternoon tea!',\r\n                  type: 'success'\r\n                });\r\n              } else {\r\n                this.$message.error(res.data.msg);\r\n              }\r\n            }).catch(error => {\r\n              this.$message.error(res.data.msg);\r\n            })\r\n          } else {\r\n            this.$message.error('Error submit! Please check your input information!');\r\n          }\r\n        });\r\n      },\r\n      backToLogin() {\r\n        this.$router.push(\"/login\")// Redirect to login\r\n      }\r\n    }\r\n  };\r\n</script>\r\n<style scoped>\r\n  #building {\r\n    background: url(\"../assets/imgs/friend.png\") center center no-repeat;\r\n    width: 50%;\r\n    min-height: 100%;\r\n    position: fixed;\r\n    /* display: flex; */\r\n    background-size: 100% 100%;\r\n  }\r\n</style>\r\n"],"mappings":";AAiCA,SAAAA,OAAA,EAAAC,UAAA;AACA,OAAAC,KAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;QACAC,WAAA;QACAC,YAAA;QACAC,SAAA;QACAC,QAAA;MACA;MACAC,KAAA;QACAJ,WAAA,GACA;UAAAK,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAN,YAAA,GACA;UAAAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAL,SAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,IAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,QAAA,GACA;UAAAK,IAAA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAE,OAAA;IACAC,SAAA;MACA,KAAAC,KAAA,aAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACAjB,KAAA,CAAAkB,IAAA,wBAAAf,QAAA,EAAAgB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAlB,IAAA,CAAAmB,IAAA;cACA,KAAAC,QAAA;gBACAZ,OAAA;gBACAE,IAAA;cACA;YACA;cACA,KAAAU,QAAA,CAAAC,KAAA,CAAAH,GAAA,CAAAlB,IAAA,CAAAsB,GAAA;YACA;UACA,GAAAC,KAAA,CAAAF,KAAA;YACA,KAAAD,QAAA,CAAAC,KAAA,CAAAH,GAAA,CAAAlB,IAAA,CAAAsB,GAAA;UACA;QACA;UACA,KAAAF,QAAA,CAAAC,KAAA;QACA;MACA;IACA;IACAG,YAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}