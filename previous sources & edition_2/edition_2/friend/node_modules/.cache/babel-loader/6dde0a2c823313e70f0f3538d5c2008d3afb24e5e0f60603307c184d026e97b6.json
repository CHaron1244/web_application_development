{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'Customer',\n  data() {\n    return {\n      index: 0,\n      row: {},\n      tableData: [],\n      // ������Ʒ��Ϣ\n      search: '',\n      user: {},\n      editGoodForm: {\n        goodName: '',\n        goodPrice: null,\n        goodImg: '',\n        goodSale: 0,\n        goodInfo: '',\n        goodType: ''\n      },\n      addGoodForm: {\n        goodName: '',\n        goodPrice: null,\n        goodImg: '',\n        goodSale: 0,\n        goodInfo: '',\n        goodType: ''\n      },\n      editDialogVisible: false,\n      addDialogVisible: false\n    };\n  },\n  created() {\n    let str = sessionStorage.getItem(\"user\"); // str is a JSON object\n    this.user = JSON.parse(str); // user is a js object (this.user.userAccount)����\n    this.load(); // ����������Ʒ��Ϣ\n  },\n\n  methods: {\n    load() {\n      axios.get(\"/good/selectAllGoods\").then(res => {\n        this.tableData = res.data.data;\n      });\n    },\n    showEditGoodDialog(index, row) {\n      this.editDialogVisible = true;\n      this.index = index;\n      this.row = row;\n    },\n    showAddGoodDialog() {\n      this.addDialogVisible = true;\n    },\n    editGood() {\n      // console.log(this.index, this.row);\n      const role = this.user.userRole;\n      if (role == '1') {\n        this.editGoodForm.goodName = this.row.goodName;\n        this.editGoodForm.goodSale = this.row.goodSale;\n        console.log(this.editGoodForm);\n        axios.post('/good/updateGood', this.editGoodForm).then(res => {\n          const ans = res.data;\n          if (ans.code === '0') {\n            this.$message({\n              message: `Successfully edit your commodity int the list of goods!`,\n              type: 'success'\n            });\n          } else {\n            this.$message({\n              type: \"error\",\n              message: 'Sorry,fail to edit this item!!'\n            });\n          }\n        }).catch(error => {\n          this.$message({\n            type: \"error\",\n            message: 'Sorry,fail to edit this item!!'\n          });\n        });\n        this.load(); // ���ݸ��¾�Ҫ����\n        this.editDialogVisible = false;\n        this.editGoodForm = {\n          goodName: '',\n          goodPrice: null,\n          // ����Ϊ����Ϊ����һ�ε��edit����dialogʱPrice��Ϊ��,�������ϴ����������µĽ��\n          goodImg: '',\n          goodSale: 0,\n          goodInfo: '',\n          goodType: ''\n        };\n      }\n    },\n    addGood() {\n      const role = this.user.userRole;\n      this.addGoodForm.goodSale = 0;\n      console.log(this.addGoodForm);\n      axios.post('/good/addGood', this.addGoodForm).then(res => {\n        const ans = res.data;\n        if (ans.code == '0') {\n          this.$message({\n            message: `Successfully add your commodity int the list of goods!`,\n            type: 'success'\n          });\n        } else {\n          this.$message({\n            type: \"error\",\n            message: 'Sorry,fail to add this item!!'\n          });\n        }\n      }).catch(error => {\n        this.$message({\n          type: \"error\",\n          message: 'Sorry,fail to add this item!!'\n        });\n      });\n      this.load(); // ���ݸ��¾�Ҫ����\n      this.addDialogVisible = false;\n      this.add = {\n        goodName: '',\n        goodPrice: null,\n        // ����Ϊ����Ϊ����һ�ε��edit����dialogʱPrice��Ϊ��,�������ϴ����������µĽ��\n        goodImg: '',\n        goodSale: 0,\n        goodInfo: '',\n        goodType: ''\n      };\n    },\n    handleDelete(index, row) {\n      this.$confirm('DO you really want to delete this commodity, so people cannot enjoy the dish!', 'REMOVE THE DELICACY', {\n        confirmButtonText: 'Confirm',\n        cancelButtonText: 'Cancel',\n        type: 'warning'\n      }).then(() => {\n        const goodName = row.goodName;\n        axios.post(`/good/deleteGoodByName/${goodName}`).then(res => {\n          if (res.data.code === '0') {\n            this.$message({\n              message: `Successfully delete ${goodName}`,\n              type: 'success'\n            });\n          } else {\n            this.$message({\n              message: 'Something wrong happened!Good is not successfully deleted!',\n              type: 'error'\n            });\n          }\n        });\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: 'You have chosen to not delete! So people can enjoy one more treat'\n        });\n      });\n    }\n  },\n  watch: {\n    tableData() {\n      deep: true, this.load();\n    }\n  },\n  computed: {\n    readTableData() {\n      ale;\n      return this.tableData.filter(item => {\n        if (this.search == '') return item.goodName.toLowerCase().includes(this.search.toLowerCase());else return item.goodName.toLowerCase().includes('');\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","index","row","tableData","search","user","editGoodForm","goodName","goodPrice","goodImg","goodSale","goodInfo","goodType","addGoodForm","editDialogVisible","addDialogVisible","created","str","sessionStorage","getItem","JSON","parse","load","methods","get","then","res","showEditGoodDialog","showAddGoodDialog","editGood","role","userRole","console","log","post","ans","code","$message","message","type","catch","error","addGood","add","handleDelete","$confirm","confirmButtonText","cancelButtonText","watch","deep","computed","readTableData","ale","filter","item","toLowerCase","includes"],"sources":["src/views/Good.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div style=\"margin:10px 0\">\r\n      <el-input v-model=\"search\" placeholder=\"Please enter the keyword to find what you like!\" style=\"width: 50%;border-bottom-color: black\" clearable></el-input>\r\n      <el-button type=\"primary\" style=\"margin-left:5px;background-color: black; color: white;border-color: white;\" @click=\"load\">search</el-button>\r\n      <el-button type=\"success\"\r\n        style=\"margin-left:10px ;background-color: rgb(121, 121, 190); color: white;border-color: white;\"\r\n        @click=\"showAddGoodDialog\">add a good</el-button>\r\n      <el-dialog title=\"Now you can add a good you want!\" :visible=\"addDialogVisible\" @close=\"addDialogVisible = false\">\r\n        <el-form :model=\"addGoodForm\" ref=\"addGoodForm\" label-width=\"120px\">\r\n          <el-form-item label=\"Name\">\r\n            <el-input v-model=\"addGoodForm.goodName\" autocomplete=\"off\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"Price\">\r\n            <el-input v-model=\"addGoodForm.goodPrice\" type=\"number\" autocomplete=\"off\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"Picture\">\r\n            <el-input v-model=\"addGoodForm.goodImg\" autocomplete=\"off\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"Information\">\r\n            <el-input v-model=\"addGoodForm.goodInfo\" autocomplete=\"off\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"Type\">\r\n            <el-input v-model=\"addGoodForm.goodType\" autocomplete=\"off\"></el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"addDialogVisible = false\">Cancel</el-button>\r\n          <el-button type=\"danger\" @click=\"addGood\">Confirm</el-button>\r\n        </div>\r\n      </el-dialog>\r\n    </div>\r\n    <el-table :data=\"readTableData\" style=\"width: 100%;\" border>\r\n      <el-table-column prop=\"goodName\" label=\"GOOD NAME\" align=\"center\"></el-table-column>\r\n      <el-table-column prop=\"goodPrice\" label=\"GOOD PRICE\" align=\"center\"></el-table-column>\r\n      <el-table-column prop=\"\" label=\"GOOD PICTURE\" align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          <img src=\"../../public/imgs/Americano.png\" alt=\"hello\" width=\"100%\"></img> <!--TODO,ͼƬ·��δ������-->\r\n          <!-- ../../public/imgs/Americano.png -->\r\n          <!-- scope.row.goodImg -->\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"goodSale\" label=\"GOOD SALE\" align=\"center\"></el-table-column>\r\n      <el-table-column prop=\"goodInfo\" label=\"GOOD INFORMATION\" align=\"center\"></el-table-column>\r\n      </el-table-column>\r\n      <el-table-column prop=\"goodType\" label=\"GOOD TYPE\" align=\"center\"></el-table-column>\r\n      <el-table-column label=\"OPERATIONS\" align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button size=\"mini\" type=\"success\"\r\n            @click=\"showEditGoodDialog(scope.$index, scope.row)\">EDIT</el-button>&nbsp;\r\n          <el-dialog title=\"Now you can edit the information of this good!\" :visible=\"editDialogVisible\"\r\n            @close=\"editDialogVisible = false\">\r\n            <el-form :model=\"editGoodForm\" ref=\"editGoodForm\" label-width=\"120px\">\r\n              <!-- <el-form-item label=\"Name\">\r\n                <el-input v-model=\"editGoodForm.goodName\" autocomplete=\"off\"></el-input>\r\n              </el-form-item> -->\r\n              <el-form-item label=\"Price\">\r\n                <el-input v-model=\"editGoodForm.goodPrice\" type=\"number\" autocomplete=\"off\"></el-input>\r\n                <!--TODO:Double����Ҳ����number��-->\r\n              </el-form-item>\r\n              <el-form-item label=\"Picture\">\r\n                <el-input v-model=\"editGoodForm.goodImg\" autocomplete=\"off\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"Information\">\r\n                <el-input v-model=\"editGoodForm.goodInfo\" autocomplete=\"off\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"Type\">\r\n                <el-input v-model=\"editGoodForm.goodType\" autocomplete=\"off\"></el-input>\r\n              </el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n              <el-button @click=\"editDialogVisible = false\">Cancel</el-button>\r\n              <el-button type=\"danger\" @click=\"editGood\">Confirm</el-button>\r\n            </div>\r\n          </el-dialog>\r\n          <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.$index, scope.row)\">DELETE</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import axios from 'axios'\r\n  export default {\r\n    name: 'Customer',\r\n    data() {\r\n      return {\r\n        index: 0,\r\n        row: {},\r\n        tableData: [], // ������Ʒ��Ϣ\r\n        search: '',\r\n        user: {},\r\n        editGoodForm: {\r\n          goodName: '',\r\n          goodPrice: null,\r\n          goodImg: '',\r\n          goodSale: 0,\r\n          goodInfo: '',\r\n          goodType: ''\r\n        },\r\n        addGoodForm: {\r\n          goodName: '',\r\n          goodPrice: null,\r\n          goodImg: '',\r\n          goodSale: 0,\r\n          goodInfo: '',\r\n          goodType: ''\r\n        },\r\n        editDialogVisible: false,\r\n        addDialogVisible: false\r\n      };\r\n    },\r\n    created() {\r\n      let str = sessionStorage.getItem(\"user\"); // str is a JSON object\r\n      this.user = JSON.parse(str); // user is a js object (this.user.userAccount)����\r\n      this.load(); // ����������Ʒ��Ϣ\r\n    },\r\n    methods: {\r\n      load() {\r\n        axios.get(\"/good/selectAllGoods\").then((res) => {\r\n          this.tableData = res.data.data;\r\n        });\r\n      },\r\n      showEditGoodDialog(index, row) {\r\n        this.editDialogVisible = true\r\n        this.index = index\r\n        this.row = row\r\n      },\r\n      showAddGoodDialog() {\r\n        this.addDialogVisible = true\r\n      },\r\n      editGood() { // console.log(this.index, this.row);\r\n        const role = this.user.userRole\r\n        if (role == '1') {\r\n          this.editGoodForm.goodName = this.row.goodName\r\n          this.editGoodForm.goodSale = this.row.goodSale\r\n          console.log(this.editGoodForm)\r\n          axios.post('/good/updateGood', this.editGoodForm).then(res => {\r\n            const ans = res.data\r\n            if (ans.code === '0') {\r\n              this.$message({\r\n                message: `Successfully edit your commodity int the list of goods!`,\r\n                type: 'success'\r\n              })\r\n            } else {\r\n              this.$message({\r\n                type: \"error\",\r\n                message: 'Sorry,fail to edit this item!!'\r\n              })\r\n            }\r\n          }).catch(error => {\r\n            this.$message({\r\n              type: \"error\",\r\n              message: 'Sorry,fail to edit this item!!'\r\n            })\r\n          })\r\n          this.load() // ���ݸ��¾�Ҫ����\r\n          this.editDialogVisible = false\r\n          this.editGoodForm = {\r\n            goodName: '',\r\n            goodPrice: null, // ����Ϊ����Ϊ����һ�ε��edit����dialogʱPrice��Ϊ��,�������ϴ����������µĽ��\r\n            goodImg: '',\r\n            goodSale: 0,\r\n            goodInfo: '',\r\n            goodType: ''\r\n          }\r\n        }\r\n      },\r\n      addGood() {\r\n        const role = this.user.userRole\r\n        this.addGoodForm.goodSale = 0\r\n        console.log(this.addGoodForm)\r\n        axios.post('/good/addGood', this.addGoodForm).then(res => {\r\n          const ans = res.data\r\n          if (ans.code == '0') {\r\n            this.$message({\r\n              message: `Successfully add your commodity int the list of goods!`,\r\n              type: 'success'\r\n            })\r\n          } else {\r\n            this.$message({\r\n              type: \"error\",\r\n              message: 'Sorry,fail to add this item!!'\r\n            })\r\n          }\r\n        }).catch(error => {\r\n          this.$message({\r\n            type: \"error\",\r\n            message: 'Sorry,fail to add this item!!'\r\n          })\r\n        })\r\n        this.load() // ���ݸ��¾�Ҫ����\r\n        this.addDialogVisible = false\r\n        this.add = {\r\n          goodName: '',\r\n          goodPrice: null, // ����Ϊ����Ϊ����һ�ε��edit����dialogʱPrice��Ϊ��,�������ϴ����������µĽ��\r\n          goodImg: '',\r\n          goodSale: 0,\r\n          goodInfo: '',\r\n          goodType: ''\r\n        }\r\n      },\r\n      handleDelete(index, row) {\r\n        this.$confirm('DO you really want to delete this commodity, so people cannot enjoy the dish!', 'REMOVE THE DELICACY', {\r\n          confirmButtonText: 'Confirm',\r\n          cancelButtonText: 'Cancel',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          const goodName = row.goodName\r\n          axios.post(`/good/deleteGoodByName/${goodName}`).then(res => {\r\n            if (res.data.code === '0') {\r\n              this.$message({\r\n                message: `Successfully delete ${goodName}`,\r\n                type: 'success'\r\n              })\r\n            } else {\r\n              this.$message({\r\n                message: 'Something wrong happened!Good is not successfully deleted!',\r\n                type: 'error'\r\n              })\r\n            }\r\n          })\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: 'You have chosen to not delete! So people can enjoy one more treat'\r\n          })\r\n        })\r\n      }\r\n    },\r\n    watch: {\r\n      tableData() {\r\n        deep: true,\r\n          this.load()\r\n      }\r\n    },\r\n    computed: {\r\n      readTableData() {\r\n        ale\r\n        return this.tableData.filter(item => {\r\n          if (this.search == '')\r\n            return item.goodName.toLowerCase().includes(this.search.toLowerCase());\r\n          else\r\n            return item.goodName.toLowerCase().includes('');\r\n        });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\n  .el-row {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .el-col {\r\n    border-radius: 4px;\r\n  }\r\n\r\n  .bottom {\r\n    margin-top: 13px;\r\n    line-height: 12px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n\r\n  .button {\r\n    padding: 0;\r\n    min-height: auto;\r\n  }\r\n\r\n  .image {\r\n    width: 100%;\r\n    display: block;\r\n  }\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}