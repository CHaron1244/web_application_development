{"ast":null,"code":"import axios from 'axios';\nimport dayjs from 'dayjs';\nexport default {\n  name: 'AllPersonInfo',\n  data() {\n    return {\n      tableData: [],\n      // ������Ա��Ϣ\n      search: '',\n      user: {},\n      currentTime: ''\n    };\n  },\n  created() {\n    let str = sessionStorage.getItem(\"user\"); // str is a JSON object\n    this.user = JSON.parse(str); // user is a js object (this.user.userAccount)����\n    this.load();\n  },\n  methods: {\n    load() {\n      // �������й��ﳵ��Ʒ��Ϣ\n      axios.get('/cart/selectAllItemsInCart').then(res => {\n        this.tableData = res.data.data;\n      });\n    },\n    generateBuyLog(index, row) {\n      // ����buy log\n      const buyLog_form = {\n        userAccount: row.userAccount,\n        goodName: row.goodName,\n        goodNumber: row.goodNumber,\n        buyTime: this.currentTime\n      };\n      axios.post('/buyLog/addBuyLog', buyLog_form).then(res => {\n        if (res.data.code == '0') {\n          this.$message({\n            type: 'success',\n            message: 'Successfully add this buy log!'\n          });\n        } else {\n          this.$message({\n            type: 'error',\n            message: 'Fail to add this buy log!'\n          });\n        }\n      }).catch(res => {\n        this.$message({\n          type: 'error',\n          message: 'Oops! Something wrong happened!'\n        });\n      });\n    },\n    checkout(index, row) {\n      const form = {\n        userAccount: row.userAccount,\n        goodName: row.goodName,\n        goodNumber: row.goodNumber,\n        orderTime: this.currentTime\n      };\n      // console.log('this.dayjs().format(\"YYYY-MM-DD HH:mm:ss\")  '+dayjs().format(\"YYYY-MM-DD HH:mm:ss\"))\n      this.$confirm('Are you sure to check out the bill?', 'NOTICE', {\n        confirmButtonText: 'Confirm',\n        cancelButtonText: 'Cancel',\n        type: 'warning'\n      }).then(() => {\n        // TODO ��ɶ��˺ŵ���ʵ���such as������ά�븶��֮��Ĳ���\n        axios.post('/alipay/pay', form).then(res => {\n          alert(111);\n          return res;\n        }).catch(error => {});\n        this.currentTime = dayjs().format(\"YYYY-MM-DD HH:mm:ss\");\n        axios.post('/bill/addBill', form).then(res => {\n          this.$message({\n            type: 'success',\n            message: 'Successfully check out the bill!'\n          });\n          // ����Ʒ��goodSale���϶�Ӧ������\n          axios.post(`/good/updateGoodByGoodName/${row.goodName}/${row.goodNumber}`).then(res => {\n            // �ٽ��и���\n            if (res.data.code == '0') {\n              this.$message({\n                type: 'success',\n                message: 'Successfully update the sale of this good!'\n              });\n            } else {\n              this.$message({\n                type: 'error',\n                message: 'Fail to update the sale of this good!'\n              });\n            }\n          });\n          const send_form = {\n            userAccount: row.userAccount,\n            goodName: row.goodName,\n            goodNumber: row.goodNumber,\n            buyTime: this.currentTime\n          };\n          // �����ʼ���user\n          axios.post('/email/send', send_form).then(res => {\n            const data = res.data;\n            if (data.code == '0') {\n              this.$message({\n                type: 'success',\n                message: 'Successfully send  the email!'\n              });\n            } else {\n              this.$message({\n                type: 'error',\n                message: 'Oops! Fail to send  the email!'\n              });\n            }\n          }).catch(error => {\n            this.$message({\n              type: 'error',\n              message: 'Fail to send  the email!'\n            });\n          });\n          // ��cart�е���һ��ɾ��������Ϊ�Ѿ����뵽order������\n          axios.post(`/cart/deleteItemByUserAccountAndGoodName/${row.userAccount}/${row.goodName}`).then(res => {\n            const data = res.data;\n            if (data.code == '0') {\n              this.$message({\n                type: 'success',\n                message: 'Successfully delete this item from the cart!'\n              });\n              this.generateBuyLog(index, row); // ���������buy log��¼\n            } else {\n              this.$message({\n                type: 'error',\n                message: 'Something wrong happened! Fail to check out the bill!'\n              });\n            }\n          }).catch(error => {\n            this.$message({\n              type: 'error',\n              message: 'Something wrong happened! Fail to check out the bill!'\n            });\n          });\n        }).catch(error => {\n          this.$message({\n            type: 'error',\n            message: 'Fail to check out the bill!'\n          });\n        });\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: 'You cancel to check out the bill!'\n        });\n      });\n    }\n  },\n  watch: {\n    tableData() {\n      deep: true, this.load();\n    }\n  },\n  computed: {\n    readTableData() {\n      const account = this.user.userAccount;\n      return this.tableData.filter(item => {\n        if (this.search == '') return item.goodName.toLowerCase().includes('') && item.userAccount === account;else return item.goodName.toLowerCase().includes(this.search.toLowerCase()) && item.userAccount === account;\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","dayjs","name","data","tableData","search","user","currentTime","created","str","sessionStorage","getItem","JSON","parse","load","methods","get","then","res","generateBuyLog","index","row","buyLog_form","userAccount","goodName","goodNumber","buyTime","post","code","$message","type","message","catch","checkout","form","orderTime","$confirm","confirmButtonText","cancelButtonText","alert","error","format","send_form","watch","deep","computed","readTableData","account","filter","item","toLowerCase","includes"],"sources":["src/views/Cart.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div style=\"padding-top: 20px;\">\r\n      <span style=\"font-size: 30px;color:blue;margin-top: 20px;\">CART INFORMATION</span>\r\n    </div>\r\n    <div style=\"margin:10px 0\">\r\n      <el-input v-model=\"search\" placeholder=\"Search your shopping information! Find by good's name\"\r\n        style=\"width: 50%;border-bottom-color: black\" clearable></el-input>\r\n      <el-button type=\"primary\" style=\"margin-left:  5px ;\r\n        background-color: black; color: white;border-color: white;\" @click=\"load\">search</el-button>\r\n    </div>\r\n    <!-- ��el-table�ϼ���height���ԾͿ��Թ̶���ͷ���������ٿ�Ҫ��Ҫ����Ҫ������� -->\r\n    <el-table :data=\"readTableData\" style=\"width: 100%;font-size: 15px;font-weight: bold\" border height=\"500\">\r\n      <el-table-column prop=\"userAccount\" label=\"USER ACCOUNT\" align=\"center\"></el-table-column>\r\n      <el-table-column prop=\"goodName\" label=\"GOOD NAME\" align=\"center\"></el-table-column>\r\n      <el-table-column prop=\"goodPrice\" label=\"GOOD PRICE\" align=\"center\"></el-table-column>\r\n      <el-table-column prop=\"goodNumber\" label=\"GOOD NUMBER\" align=\"center\"></el-table-column>\r\n      <el-table-column label=\"CHECKOUT\" align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button size=\"mini\" type=\"primary\" @click=\"checkout(scope.$index, scope.row)\">CHECKOUT THE BILL</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n  </div>\r\n</template>\r\n<script>\r\n  import axios from 'axios'\r\n  import dayjs from 'dayjs'\r\n  export default {\r\n    name: 'AllPersonInfo',\r\n    data() {\r\n      return {\r\n        tableData: [], // ������Ա��Ϣ\r\n        search: '',\r\n        user: {},\r\n        currentTime: ''\r\n      }\r\n    },\r\n    created() {\r\n      let str = sessionStorage.getItem(\"user\"); // str is a JSON object\r\n      this.user = JSON.parse(str); // user is a js object (this.user.userAccount)����\r\n      this.load();\r\n    },\r\n    methods: {\r\n      load() { // �������й��ﳵ��Ʒ��Ϣ\r\n        axios.get('/cart/selectAllItemsInCart').then(res => {\r\n          this.tableData = res.data.data;\r\n        })\r\n      },\r\n      generateBuyLog(index, row) { // ����buy log\r\n        const buyLog_form = {\r\n          userAccount: row.userAccount,\r\n          goodName: row.goodName,\r\n          goodNumber: row.goodNumber,\r\n          buyTime: this.currentTime\r\n        }\r\n        axios.post('/buyLog/addBuyLog', buyLog_form).then(res => {\r\n          if (res.data.code == '0') {\r\n            this.$message({\r\n              type: 'success',\r\n              message: 'Successfully add this buy log!'\r\n            })\r\n          } else {\r\n            this.$message({\r\n              type: 'error',\r\n              message: 'Fail to add this buy log!'\r\n            })\r\n          }\r\n        }).catch(res => {\r\n          this.$message({\r\n            type: 'error',\r\n            message: 'Oops! Something wrong happened!'\r\n          })\r\n        })\r\n      },\r\n      checkout(index, row) {\r\n        const form = {\r\n          userAccount: row.userAccount,\r\n          goodName: row.goodName,\r\n          goodNumber: row.goodNumber,\r\n          orderTime: this.currentTime\r\n        }\r\n        // console.log('this.dayjs().format(\"YYYY-MM-DD HH:mm:ss\")  '+dayjs().format(\"YYYY-MM-DD HH:mm:ss\"))\r\n        this.$confirm('Are you sure to check out the bill?', 'NOTICE', {\r\n          confirmButtonText: 'Confirm',\r\n          cancelButtonText: 'Cancel',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          // TODO ��ɶ��˺ŵ���ʵ���such as������ά�븶��֮��Ĳ���\r\n          axios.post('/alipay/pay',form).then(res => {\r\n            alert(111)\r\n            return res\r\n          }).catch(error => {\r\n\r\n          })\r\n          this.currentTime = dayjs().format(\"YYYY-MM-DD HH:mm:ss\")\r\n          axios.post('/bill/addBill', form).then(res => {\r\n            this.$message({\r\n              type: 'success',\r\n              message: 'Successfully check out the bill!'\r\n            })\r\n            // ����Ʒ��goodSale���϶�Ӧ������\r\n            axios.post(`/good/updateGoodByGoodName/${row.goodName}/${row.goodNumber}`).then(res => { // �ٽ��и���\r\n              if (res.data.code == '0') {\r\n                this.$message({\r\n                  type: 'success',\r\n                  message: 'Successfully update the sale of this good!'\r\n                })\r\n              } else {\r\n                this.$message({\r\n                  type: 'error',\r\n                  message: 'Fail to update the sale of this good!'\r\n                })\r\n              }\r\n            })\r\n            const send_form = {\r\n              userAccount: row.userAccount,\r\n              goodName: row.goodName,\r\n              goodNumber: row.goodNumber,\r\n              buyTime: this.currentTime\r\n            }\r\n            // �����ʼ���user\r\n            axios.post('/email/send', send_form).then(res => {\r\n              const data = res.data\r\n              if (data.code == '0') {\r\n                this.$message({\r\n                  type: 'success',\r\n                  message: 'Successfully send  the email!'\r\n                })\r\n              } else {\r\n                this.$message({\r\n                  type: 'error',\r\n                  message: 'Oops! Fail to send  the email!'\r\n                })\r\n              }\r\n            }).catch(error => {\r\n              this.$message({\r\n                type: 'error',\r\n                message: 'Fail to send  the email!'\r\n              })\r\n            })\r\n            // ��cart�е���һ��ɾ��������Ϊ�Ѿ����뵽order������\r\n            axios.post(`/cart/deleteItemByUserAccountAndGoodName/${row.userAccount}/${row.goodName}`).then(res => {\r\n              const data = res.data\r\n              if (data.code == '0') {\r\n                this.$message({\r\n                  type: 'success',\r\n                  message: 'Successfully delete this item from the cart!'\r\n                })\r\n                this.generateBuyLog(index, row) // ���������buy log��¼\r\n              } else {\r\n                this.$message({\r\n                  type: 'error',\r\n                  message: 'Something wrong happened! Fail to check out the bill!'\r\n                })\r\n              }\r\n            }).catch(error => {\r\n              this.$message({\r\n                type: 'error',\r\n                message: 'Something wrong happened! Fail to check out the bill!'\r\n              })\r\n            })\r\n          }).catch(error => {\r\n            this.$message({\r\n              type: 'error',\r\n              message: 'Fail to check out the bill!'\r\n            })\r\n          })\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: 'You cancel to check out the bill!'\r\n          })\r\n        })\r\n      }\r\n    },\r\n    watch: {\r\n      tableData() {\r\n        deep: true,\r\n          this.load()\r\n      }\r\n    },\r\n    computed: {\r\n      readTableData() {\r\n        const account = this.user.userAccount\r\n        return this.tableData.filter(item => {\r\n          if (this.search == '')\r\n            return item.goodName.toLowerCase().includes('') && item.userAccount === account;\r\n          else\r\n            return item.goodName.toLowerCase().includes(this.search.toLowerCase()) && item.userAccount === account;\r\n        });\r\n      }\r\n    }\r\n  }\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}